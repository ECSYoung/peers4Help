{"version":3,"sources":["Components/_Helmet.js","Components/_Header.js","Components/_Main.js","App.js","serviceWorker.js","index.js"],"names":["Application","className","Helmet","charSet","name","content","property","rel","href","integrity","crossorigin","src","React","Component","Header","alt","class","Main","target","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oRA2CeA,E,iLAtCP,OACA,yBAAKC,UAAU,eACX,kBAACC,EAAA,OAAD,KACA,0BAAMC,QAAQ,UACd,6DAGA,0BAAMC,KAAK,cAAcC,QAAQ,gDACjC,0BAAMD,KAAK,SAASC,QAAQ,oBAC5B,0BAAMD,KAAK,SAASC,QAAQ,cAE5B,0BAAMD,KAAK,eAAeC,QAAQ,YAClC,0BAAMD,KAAK,gBAAgBC,QAAQ,eACnC,0BAAMD,KAAK,sBACPC,QAAQ,gDAGZ,0BAAMC,SAAS,SAASD,QAAQ,yBAChC,0BAAMC,SAAS,UAAUD,QAAQ,YACjC,0BAAMC,SAAS,WAAWD,QAAQ,eAClC,0BAAMC,SAAS,iBACXD,QAAQ,gDAIZ,0BAAME,IAAI,aAAaC,KAAK,mDAC5BC,UAAU,kGACVC,YAAY,KACZ,4BAAQC,IAAI,kDACZF,UAAU,kGACVC,YAAY,W,GAhCEE,IAAMC,WCmBjBC,E,iLAhBP,OACI,yBAAKb,UAAU,OACf,4BAAQA,UAAU,cACd,6BACI,yBAAKU,IAAK,8DAA+DI,IAAI,kBAC7E,4BACI,4BAAI,4BAAQC,MAAM,aAAd,SACJ,4BAAI,4BAAQA,MAAM,aAAd,iB,GATPH,aC+BNI,E,iLA3BP,OACI,yBAAKD,MAAO,YACR,yBAAKA,MAAM,YACP,2BACI,0BAAMA,MAAM,iBAAZ,gBACA,0BAAMA,MAAO,SAAb,uNAAyO,uBAAGR,KAAM,oCAAoCU,OAAO,UAApD,kBAAzO,gBAEA,0BAAMF,MAAO,iBAAb,oBACA,0BAAMA,MAAO,SAAb,2NACA,wBAAIA,MAAO,aACP,uFACA,8EAAmD,0BAAMA,MAAO,YAAb,0EACnD,0GACA,6HACA,kNACA,qFAA0D,uBAAGR,KAAM,oCAAoCU,OAAO,UAApD,kBAA1D,gEAIZ,iDACA,gDACA,mD,GAvBGL,aCiBJM,G,uLAVT,OACE,yBAAKlB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANQY,cCCEO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.15bae65c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nclass Application extends React.Component {\r\n    render() {\r\n        return (\r\n        <div className=\"application\">\r\n            <Helmet>\r\n            <meta charSet=\"utf-8\" />\r\n            <title>• Peers 4 Help •</title>\r\n\r\n            {/* search metadata */}\r\n            <meta name=\"description\" content=\"Search for Help Locally From Your Neighbors\" />\r\n            <meta name=\"robots\" content=\"index, nofollow\" />\r\n            <meta name=\"author\" content=\"Sui Young\" />\r\n            {/* twitter metadata */}\r\n            <meta name=\"twitter:card\" content=\"summary\" />\r\n            <meta name=\"twitter:title\" content=\"Peers4Help\" />\r\n            <meta name=\"twitter:description\"\r\n                content=\"Search for Help Locally From Your Neighbors\" />\r\n            {/* <meta name=\"twitter:image\" content=\"\" /> */}\r\n            {/* linkedin and facebook metadata */}\r\n            <meta property=\"og:url\" content=\"http://www.xyoung.ca\" />\r\n            <meta property=\"og:type\" content=\"website\" />\r\n            <meta property=\"og:title\" content=\"Peers4Help\" />\r\n            <meta property=\"og:description\"\r\n                content=\"Search for Help Locally From Your Neighbors\" />\r\n            {/* <meta property=\"og:image\" content=\"\" /> */}\r\n\r\n            {/* import map */}\r\n            <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.6.0/dist/leaflet.css\"\r\n            integrity=\"sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ==\"\r\n            crossorigin=\"\"/>\r\n            <script src=\"https://unpkg.com/leaflet@1.6.0/dist/leaflet.js\"\r\n            integrity=\"sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew==\"\r\n            crossorigin=\"\"></script>\r\n            </Helmet>\r\n            \r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Application;","// a couple of functions from the React library\r\nimport React, { Component } from 'react';\r\n\r\n\r\nclass Header extends Component{\r\n    render(){\r\n        return (\r\n            <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <nav>\r\n                    <img src={'https://img.icons8.com/bubbles/100/000000/user-location.png'} alt=\"location icon\"/>\r\n                    <ul>\r\n                        <li><button class=\"navButton\">Need</button></li>\r\n                        <li><button class=\"navButton\">Help</button></li>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","// a couple of functions from the React library\r\nimport React, { Component } from 'react';\r\n\r\n// import components\r\n\r\n\r\nclass Main extends Component{\r\n    render(){\r\n        return (\r\n            <div class= \"mainPage\">\r\n                <div class=\"mainText\">\r\n                    <p>\r\n                        <span class=\"impText break\">Please Read:</span> \r\n                        <span class= \"break\">This app is currently still in development. And as such, improvements will be made continuously. Please have patience, as I am only 1 person working on this passion project. If you have suggestions, please DM me <a href= \"https://twitter.com/ECSYoungCodes\" target=\"_blank\">@ECSYoungCodes</a> on Twitter.</span>\r\n\r\n                        <span class= \"impText break\">How This Works: </span>\r\n                        <span class= \"break\">This is currently functioning on an honor system. Please only respone to requests for aid if you can genuinely service them. Please only make requests if you are genuinely in need. Please rate your urgency honestly.</span>\r\n                        <ol class= \"instrList\">\r\n                            <li>Click on the buttom that corresponds with your purpose.</li>\r\n                            <li>Complete the form to the best of your ability. <span class= \"impText2\">Note: Required fields to receive aid are name and contact information</span></li>\r\n                            <li>Those with disabilities and immunocompromised systems will be prioritized.</li>\r\n                            <li>Your needs will be saved to a serversize database that will stay there until you delete them.</li>\r\n                            <li>If you are helping, you will need to get in contact with the person in need via the contact method they provide to receive their best method of trade/delivery, including address.</li>\r\n                            <li>If at any point anyone becomes problematic, notify me <a href= \"https://twitter.com/ECSYoungCodes\" target=\"_blank\">@ECSYoungCodes</a> on Twitter. I will look into the situation accordingly. </li>\r\n                        </ol>\r\n                    </p>\r\n                </div>\r\n                <h2>Ontario Residents</h2>\r\n                <button>I Am In Need</button>\r\n                <button>I Can Help</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","// a couple of functions from the React library\nimport React, { Component } from 'react';\n\n// import components\nimport Helmet from './Components/_Helmet';\nimport Header from './Components/_Header';\nimport Main from './Components/_Main';\n\n// CSS for the `App` component\nimport './App.scss';\n\nclass App extends Component{\n  render(){\n      return (\n        <div className=\"App\">\n          <Helmet />\n          <Header />\n          <Main />\n        </div>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}